
LCD_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000076  00800060  00000ad4  00000b48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000bbe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bf0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  00000c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001d96  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009a6  00000000  00000000  00002afa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e8a  00000000  00000000  000034a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000248  00000000  00000000  0000432c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b6  00000000  00000000  00004574  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001035  00000000  00000000  00004b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00005b5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3d       	cpi	r26, 0xD6	; 214
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 bf 03 	call	0x77e	; 0x77e <main>
  7a:	0c 94 68 05 	jmp	0xad0	; 0xad0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Button_Init>:
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	51 f0       	breq	.+20     	; 0x9a <Button_Init+0x18>
  86:	18 f0       	brcs	.+6      	; 0x8e <Button_Init+0xc>
  88:	82 30       	cpi	r24, 0x02	; 2
  8a:	69 f0       	breq	.+26     	; 0xa6 <Button_Init+0x24>
  8c:	08 95       	ret
  8e:	41 e0       	ldi	r20, 0x01	; 1
  90:	60 e0       	ldi	r22, 0x00	; 0
  92:	84 e1       	ldi	r24, 0x14	; 20
  94:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
  98:	08 95       	ret
  9a:	41 e0       	ldi	r20, 0x01	; 1
  9c:	66 e0       	ldi	r22, 0x06	; 6
  9e:	88 e2       	ldi	r24, 0x28	; 40
  a0:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
  a4:	08 95       	ret
  a6:	41 e0       	ldi	r20, 0x01	; 1
  a8:	62 e0       	ldi	r22, 0x02	; 2
  aa:	88 e2       	ldi	r24, 0x28	; 40
  ac:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
  b0:	08 95       	ret

000000b2 <Button_GetValue>:
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	00 d0       	rcall	.+0      	; 0xb8 <Button_GetValue+0x6>
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
  bc:	19 82       	std	Y+1, r1	; 0x01
  be:	1a 82       	std	Y+2, r1	; 0x02
  c0:	81 30       	cpi	r24, 0x01	; 1
  c2:	f1 f0       	breq	.+60     	; 0x100 <Button_GetValue+0x4e>
  c4:	18 f0       	brcs	.+6      	; 0xcc <Button_GetValue+0x1a>
  c6:	82 30       	cpi	r24, 0x02	; 2
  c8:	a9 f1       	breq	.+106    	; 0x134 <Button_GetValue+0x82>
  ca:	4d c0       	rjmp	.+154    	; 0x166 <Button_GetValue+0xb4>
  cc:	ae 01       	movw	r20, r28
  ce:	4f 5f       	subi	r20, 0xFF	; 255
  d0:	5f 4f       	sbci	r21, 0xFF	; 255
  d2:	60 e0       	ldi	r22, 0x00	; 0
  d4:	84 e1       	ldi	r24, 0x14	; 20
  d6:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
  da:	ae 01       	movw	r20, r28
  dc:	4e 5f       	subi	r20, 0xFE	; 254
  de:	5f 4f       	sbci	r21, 0xFF	; 255
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	84 e1       	ldi	r24, 0x14	; 20
  e4:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
  e8:	07 c0       	rjmp	.+14     	; 0xf8 <Button_GetValue+0x46>
  ea:	ae 01       	movw	r20, r28
  ec:	4e 5f       	subi	r20, 0xFE	; 254
  ee:	5f 4f       	sbci	r21, 0xFF	; 255
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	84 e1       	ldi	r24, 0x14	; 20
  f4:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
  f8:	8a 81       	ldd	r24, Y+2	; 0x02
  fa:	81 30       	cpi	r24, 0x01	; 1
  fc:	b1 f3       	breq	.-20     	; 0xea <Button_GetValue+0x38>
  fe:	33 c0       	rjmp	.+102    	; 0x166 <Button_GetValue+0xb4>
 100:	ae 01       	movw	r20, r28
 102:	4f 5f       	subi	r20, 0xFF	; 255
 104:	5f 4f       	sbci	r21, 0xFF	; 255
 106:	66 e0       	ldi	r22, 0x06	; 6
 108:	88 e2       	ldi	r24, 0x28	; 40
 10a:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 10e:	ae 01       	movw	r20, r28
 110:	4e 5f       	subi	r20, 0xFE	; 254
 112:	5f 4f       	sbci	r21, 0xFF	; 255
 114:	66 e0       	ldi	r22, 0x06	; 6
 116:	88 e2       	ldi	r24, 0x28	; 40
 118:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 11c:	07 c0       	rjmp	.+14     	; 0x12c <Button_GetValue+0x7a>
 11e:	ae 01       	movw	r20, r28
 120:	4e 5f       	subi	r20, 0xFE	; 254
 122:	5f 4f       	sbci	r21, 0xFF	; 255
 124:	66 e0       	ldi	r22, 0x06	; 6
 126:	88 e2       	ldi	r24, 0x28	; 40
 128:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 12c:	8a 81       	ldd	r24, Y+2	; 0x02
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	b1 f3       	breq	.-20     	; 0x11e <Button_GetValue+0x6c>
 132:	19 c0       	rjmp	.+50     	; 0x166 <Button_GetValue+0xb4>
 134:	ae 01       	movw	r20, r28
 136:	4f 5f       	subi	r20, 0xFF	; 255
 138:	5f 4f       	sbci	r21, 0xFF	; 255
 13a:	62 e0       	ldi	r22, 0x02	; 2
 13c:	88 e2       	ldi	r24, 0x28	; 40
 13e:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 142:	ae 01       	movw	r20, r28
 144:	4e 5f       	subi	r20, 0xFE	; 254
 146:	5f 4f       	sbci	r21, 0xFF	; 255
 148:	62 e0       	ldi	r22, 0x02	; 2
 14a:	88 e2       	ldi	r24, 0x28	; 40
 14c:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 150:	07 c0       	rjmp	.+14     	; 0x160 <Button_GetValue+0xae>
 152:	ae 01       	movw	r20, r28
 154:	4e 5f       	subi	r20, 0xFE	; 254
 156:	5f 4f       	sbci	r21, 0xFF	; 255
 158:	62 e0       	ldi	r22, 0x02	; 2
 15a:	88 e2       	ldi	r24, 0x28	; 40
 15c:	0e 94 ab 01 	call	0x356	; 0x356 <DIO_ReadPinValue>
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	81 30       	cpi	r24, 0x01	; 1
 164:	b1 f3       	breq	.-20     	; 0x152 <Button_GetValue+0xa0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 166:	8f e3       	ldi	r24, 0x3F	; 63
 168:	9c e9       	ldi	r25, 0x9C	; 156
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <Button_GetValue+0xb8>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <Button_GetValue+0xbe>
 170:	00 00       	nop
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	0f 90       	pop	r0
 176:	0f 90       	pop	r0
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <DIO_SetPinDir>:
 17e:	41 30       	cpi	r20, 0x01	; 1
 180:	b9 f5       	brne	.+110    	; 0x1f0 <DIO_SetPinDir+0x72>
 182:	84 31       	cpi	r24, 0x14	; 20
 184:	a1 f0       	breq	.+40     	; 0x1ae <DIO_SetPinDir+0x30>
 186:	18 f4       	brcc	.+6      	; 0x18e <DIO_SetPinDir+0x10>
 188:	8a 30       	cpi	r24, 0x0A	; 10
 18a:	31 f0       	breq	.+12     	; 0x198 <DIO_SetPinDir+0x1a>
 18c:	08 95       	ret
 18e:	8e 31       	cpi	r24, 0x1E	; 30
 190:	c9 f0       	breq	.+50     	; 0x1c4 <DIO_SetPinDir+0x46>
 192:	88 32       	cpi	r24, 0x28	; 40
 194:	11 f1       	breq	.+68     	; 0x1da <DIO_SetPinDir+0x5c>
 196:	08 95       	ret
 198:	2a b3       	in	r18, 0x1a	; 26
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_SetPinDir+0x26>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_SetPinDir+0x22>
 1a8:	82 2b       	or	r24, r18
 1aa:	8a bb       	out	0x1a, r24	; 26
 1ac:	08 95       	ret
 1ae:	27 b3       	in	r18, 0x17	; 23
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_SetPinDir+0x3c>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_SetPinDir+0x38>
 1be:	82 2b       	or	r24, r18
 1c0:	87 bb       	out	0x17, r24	; 23
 1c2:	08 95       	ret
 1c4:	24 b3       	in	r18, 0x14	; 20
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_SetPinDir+0x52>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_SetPinDir+0x4e>
 1d4:	82 2b       	or	r24, r18
 1d6:	84 bb       	out	0x14, r24	; 20
 1d8:	08 95       	ret
 1da:	21 b3       	in	r18, 0x11	; 17
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_SetPinDir+0x68>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_SetPinDir+0x64>
 1ea:	82 2b       	or	r24, r18
 1ec:	81 bb       	out	0x11, r24	; 17
 1ee:	08 95       	ret
 1f0:	41 11       	cpse	r20, r1
 1f2:	3a c0       	rjmp	.+116    	; 0x268 <DIO_SetPinDir+0xea>
 1f4:	84 31       	cpi	r24, 0x14	; 20
 1f6:	a9 f0       	breq	.+42     	; 0x222 <DIO_SetPinDir+0xa4>
 1f8:	18 f4       	brcc	.+6      	; 0x200 <DIO_SetPinDir+0x82>
 1fa:	8a 30       	cpi	r24, 0x0A	; 10
 1fc:	31 f0       	breq	.+12     	; 0x20a <DIO_SetPinDir+0x8c>
 1fe:	08 95       	ret
 200:	8e 31       	cpi	r24, 0x1E	; 30
 202:	d9 f0       	breq	.+54     	; 0x23a <DIO_SetPinDir+0xbc>
 204:	88 32       	cpi	r24, 0x28	; 40
 206:	29 f1       	breq	.+74     	; 0x252 <DIO_SetPinDir+0xd4>
 208:	08 95       	ret
 20a:	2a b3       	in	r18, 0x1a	; 26
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_SetPinDir+0x98>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_SetPinDir+0x94>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	8a bb       	out	0x1a, r24	; 26
 220:	08 95       	ret
 222:	27 b3       	in	r18, 0x17	; 23
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_SetPinDir+0xb0>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_SetPinDir+0xac>
 232:	80 95       	com	r24
 234:	82 23       	and	r24, r18
 236:	87 bb       	out	0x17, r24	; 23
 238:	08 95       	ret
 23a:	24 b3       	in	r18, 0x14	; 20
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_SetPinDir+0xc8>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	6a 95       	dec	r22
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_SetPinDir+0xc4>
 24a:	80 95       	com	r24
 24c:	82 23       	and	r24, r18
 24e:	84 bb       	out	0x14, r24	; 20
 250:	08 95       	ret
 252:	21 b3       	in	r18, 0x11	; 17
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_SetPinDir+0xe0>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_SetPinDir+0xdc>
 262:	80 95       	com	r24
 264:	82 23       	and	r24, r18
 266:	81 bb       	out	0x11, r24	; 17
 268:	08 95       	ret

0000026a <DIO_SetPinValue>:
 26a:	41 30       	cpi	r20, 0x01	; 1
 26c:	b9 f5       	brne	.+110    	; 0x2dc <DIO_SetPinValue+0x72>
 26e:	84 31       	cpi	r24, 0x14	; 20
 270:	a1 f0       	breq	.+40     	; 0x29a <DIO_SetPinValue+0x30>
 272:	18 f4       	brcc	.+6      	; 0x27a <DIO_SetPinValue+0x10>
 274:	8a 30       	cpi	r24, 0x0A	; 10
 276:	31 f0       	breq	.+12     	; 0x284 <DIO_SetPinValue+0x1a>
 278:	08 95       	ret
 27a:	8e 31       	cpi	r24, 0x1E	; 30
 27c:	c9 f0       	breq	.+50     	; 0x2b0 <DIO_SetPinValue+0x46>
 27e:	88 32       	cpi	r24, 0x28	; 40
 280:	11 f1       	breq	.+68     	; 0x2c6 <DIO_SetPinValue+0x5c>
 282:	08 95       	ret
 284:	2b b3       	in	r18, 0x1b	; 27
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_SetPinValue+0x26>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_SetPinValue+0x22>
 294:	82 2b       	or	r24, r18
 296:	8b bb       	out	0x1b, r24	; 27
 298:	08 95       	ret
 29a:	28 b3       	in	r18, 0x18	; 24
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <DIO_SetPinValue+0x3c>
 2a2:	88 0f       	add	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	6a 95       	dec	r22
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <DIO_SetPinValue+0x38>
 2aa:	82 2b       	or	r24, r18
 2ac:	88 bb       	out	0x18, r24	; 24
 2ae:	08 95       	ret
 2b0:	25 b3       	in	r18, 0x15	; 21
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_SetPinValue+0x52>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	6a 95       	dec	r22
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_SetPinValue+0x4e>
 2c0:	82 2b       	or	r24, r18
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	08 95       	ret
 2c6:	22 b3       	in	r18, 0x12	; 18
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_SetPinValue+0x68>
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_SetPinValue+0x64>
 2d6:	82 2b       	or	r24, r18
 2d8:	82 bb       	out	0x12, r24	; 18
 2da:	08 95       	ret
 2dc:	41 11       	cpse	r20, r1
 2de:	3a c0       	rjmp	.+116    	; 0x354 <DIO_SetPinValue+0xea>
 2e0:	84 31       	cpi	r24, 0x14	; 20
 2e2:	a9 f0       	breq	.+42     	; 0x30e <DIO_SetPinValue+0xa4>
 2e4:	18 f4       	brcc	.+6      	; 0x2ec <DIO_SetPinValue+0x82>
 2e6:	8a 30       	cpi	r24, 0x0A	; 10
 2e8:	31 f0       	breq	.+12     	; 0x2f6 <DIO_SetPinValue+0x8c>
 2ea:	08 95       	ret
 2ec:	8e 31       	cpi	r24, 0x1E	; 30
 2ee:	d9 f0       	breq	.+54     	; 0x326 <DIO_SetPinValue+0xbc>
 2f0:	88 32       	cpi	r24, 0x28	; 40
 2f2:	29 f1       	breq	.+74     	; 0x33e <DIO_SetPinValue+0xd4>
 2f4:	08 95       	ret
 2f6:	2b b3       	in	r18, 0x1b	; 27
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_SetPinValue+0x98>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_SetPinValue+0x94>
 306:	80 95       	com	r24
 308:	82 23       	and	r24, r18
 30a:	8b bb       	out	0x1b, r24	; 27
 30c:	08 95       	ret
 30e:	28 b3       	in	r18, 0x18	; 24
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_SetPinValue+0xb0>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_SetPinValue+0xac>
 31e:	80 95       	com	r24
 320:	82 23       	and	r24, r18
 322:	88 bb       	out	0x18, r24	; 24
 324:	08 95       	ret
 326:	25 b3       	in	r18, 0x15	; 21
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_SetPinValue+0xc8>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	6a 95       	dec	r22
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_SetPinValue+0xc4>
 336:	80 95       	com	r24
 338:	82 23       	and	r24, r18
 33a:	85 bb       	out	0x15, r24	; 21
 33c:	08 95       	ret
 33e:	22 b3       	in	r18, 0x12	; 18
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_SetPinValue+0xe0>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	6a 95       	dec	r22
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_SetPinValue+0xdc>
 34e:	80 95       	com	r24
 350:	82 23       	and	r24, r18
 352:	82 bb       	out	0x12, r24	; 18
 354:	08 95       	ret

00000356 <DIO_ReadPinValue>:
 356:	84 31       	cpi	r24, 0x14	; 20
 358:	a1 f0       	breq	.+40     	; 0x382 <DIO_ReadPinValue+0x2c>
 35a:	18 f4       	brcc	.+6      	; 0x362 <DIO_ReadPinValue+0xc>
 35c:	8a 30       	cpi	r24, 0x0A	; 10
 35e:	31 f0       	breq	.+12     	; 0x36c <DIO_ReadPinValue+0x16>
 360:	08 95       	ret
 362:	8e 31       	cpi	r24, 0x1E	; 30
 364:	c9 f0       	breq	.+50     	; 0x398 <DIO_ReadPinValue+0x42>
 366:	88 32       	cpi	r24, 0x28	; 40
 368:	11 f1       	breq	.+68     	; 0x3ae <DIO_ReadPinValue+0x58>
 36a:	08 95       	ret
 36c:	89 b3       	in	r24, 0x19	; 25
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	02 c0       	rjmp	.+4      	; 0x376 <DIO_ReadPinValue+0x20>
 372:	95 95       	asr	r25
 374:	87 95       	ror	r24
 376:	6a 95       	dec	r22
 378:	e2 f7       	brpl	.-8      	; 0x372 <DIO_ReadPinValue+0x1c>
 37a:	81 70       	andi	r24, 0x01	; 1
 37c:	fa 01       	movw	r30, r20
 37e:	80 83       	st	Z, r24
 380:	08 95       	ret
 382:	86 b3       	in	r24, 0x16	; 22
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_ReadPinValue+0x36>
 388:	95 95       	asr	r25
 38a:	87 95       	ror	r24
 38c:	6a 95       	dec	r22
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_ReadPinValue+0x32>
 390:	81 70       	andi	r24, 0x01	; 1
 392:	fa 01       	movw	r30, r20
 394:	80 83       	st	Z, r24
 396:	08 95       	ret
 398:	83 b3       	in	r24, 0x13	; 19
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <DIO_ReadPinValue+0x4c>
 39e:	95 95       	asr	r25
 3a0:	87 95       	ror	r24
 3a2:	6a 95       	dec	r22
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <DIO_ReadPinValue+0x48>
 3a6:	81 70       	andi	r24, 0x01	; 1
 3a8:	fa 01       	movw	r30, r20
 3aa:	80 83       	st	Z, r24
 3ac:	08 95       	ret
 3ae:	80 b3       	in	r24, 0x10	; 16
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <DIO_ReadPinValue+0x62>
 3b4:	95 95       	asr	r25
 3b6:	87 95       	ror	r24
 3b8:	6a 95       	dec	r22
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <DIO_ReadPinValue+0x5e>
 3bc:	81 70       	andi	r24, 0x01	; 1
 3be:	fa 01       	movw	r30, r20
 3c0:	80 83       	st	Z, r24
 3c2:	08 95       	ret

000003c4 <DIO_TogglePin>:
 3c4:	84 31       	cpi	r24, 0x14	; 20
 3c6:	a1 f0       	breq	.+40     	; 0x3f0 <DIO_TogglePin+0x2c>
 3c8:	18 f4       	brcc	.+6      	; 0x3d0 <DIO_TogglePin+0xc>
 3ca:	8a 30       	cpi	r24, 0x0A	; 10
 3cc:	31 f0       	breq	.+12     	; 0x3da <DIO_TogglePin+0x16>
 3ce:	08 95       	ret
 3d0:	8e 31       	cpi	r24, 0x1E	; 30
 3d2:	c9 f0       	breq	.+50     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3d4:	88 32       	cpi	r24, 0x28	; 40
 3d6:	11 f1       	breq	.+68     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3d8:	08 95       	ret
 3da:	2b b3       	in	r18, 0x1b	; 27
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_TogglePin+0x22>
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	6a 95       	dec	r22
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_TogglePin+0x1e>
 3ea:	82 27       	eor	r24, r18
 3ec:	8b bb       	out	0x1b, r24	; 27
 3ee:	08 95       	ret
 3f0:	28 b3       	in	r18, 0x18	; 24
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_TogglePin+0x38>
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	6a 95       	dec	r22
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_TogglePin+0x34>
 400:	82 27       	eor	r24, r18
 402:	88 bb       	out	0x18, r24	; 24
 404:	08 95       	ret
 406:	25 b3       	in	r18, 0x15	; 21
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 40e:	88 0f       	add	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	6a 95       	dec	r22
 414:	e2 f7       	brpl	.-8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 416:	82 27       	eor	r24, r18
 418:	85 bb       	out	0x15, r24	; 21
 41a:	08 95       	ret
 41c:	22 b3       	in	r18, 0x12	; 18
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	02 c0       	rjmp	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	6a 95       	dec	r22
 42a:	e2 f7       	brpl	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 42c:	82 27       	eor	r24, r18
 42e:	82 bb       	out	0x12, r24	; 18
 430:	08 95       	ret

00000432 <LCD_WriteCommand>:
	
	#endif
}

void LCD_WriteCommand (uint8 cmd)
{
 432:	cf 93       	push	r28
 434:	c8 2f       	mov	r28, r24
	
	#if LCD_MODE == 4
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_RS_PIN, DIO_PIN_LOW);
 436:	40 e0       	ldi	r20, 0x00	; 0
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	84 e1       	ldi	r24, 0x14	; 20
 43c:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_RW_PIN, DIO_PIN_LOW);
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	62 e0       	ldi	r22, 0x02	; 2
 444:	84 e1       	ldi	r24, 0x14	; 20
 446:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 44a:	40 e0       	ldi	r20, 0x00	; 0
 44c:	63 e0       	ldi	r22, 0x03	; 3
 44e:	84 e1       	ldi	r24, 0x14	; 20
 450:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	
	LCD_4BIT_MODE_DATA_BUS = (cmd & 0xf0) | (LCD_4BIT_MODE_DATA_BUS & 0x0f);
 454:	8b b3       	in	r24, 0x1b	; 27
 456:	9c 2f       	mov	r25, r28
 458:	90 7f       	andi	r25, 0xF0	; 240
 45a:	8f 70       	andi	r24, 0x0F	; 15
 45c:	89 2b       	or	r24, r25
 45e:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_HIGH);
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	63 e0       	ldi	r22, 0x03	; 3
 464:	84 e1       	ldi	r24, 0x14	; 20
 466:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 46a:	8f e9       	ldi	r24, 0x9F	; 159
 46c:	9f e0       	ldi	r25, 0x0F	; 15
 46e:	01 97       	sbiw	r24, 0x01	; 1
 470:	f1 f7       	brne	.-4      	; 0x46e <LCD_WriteCommand+0x3c>
 472:	00 c0       	rjmp	.+0      	; 0x474 <LCD_WriteCommand+0x42>
 474:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 476:	40 e0       	ldi	r20, 0x00	; 0
 478:	63 e0       	ldi	r22, 0x03	; 3
 47a:	84 e1       	ldi	r24, 0x14	; 20
 47c:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	
	LCD_4BIT_MODE_DATA_BUS = (cmd << 4) | (LCD_4BIT_MODE_DATA_BUS & 0x0f);
 480:	20 e1       	ldi	r18, 0x10	; 16
 482:	c2 9f       	mul	r28, r18
 484:	c0 01       	movw	r24, r0
 486:	11 24       	eor	r1, r1
 488:	9b b3       	in	r25, 0x1b	; 27
 48a:	9f 70       	andi	r25, 0x0F	; 15
 48c:	89 2b       	or	r24, r25
 48e:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_HIGH);
 490:	41 e0       	ldi	r20, 0x01	; 1
 492:	63 e0       	ldi	r22, 0x03	; 3
 494:	84 e1       	ldi	r24, 0x14	; 20
 496:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 49a:	8f e9       	ldi	r24, 0x9F	; 159
 49c:	9f e0       	ldi	r25, 0x0F	; 15
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <LCD_WriteCommand+0x6c>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <LCD_WriteCommand+0x72>
 4a4:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 4a6:	40 e0       	ldi	r20, 0x00	; 0
 4a8:	63 e0       	ldi	r22, 0x03	; 3
 4aa:	84 e1       	ldi	r24, 0x14	; 20
 4ac:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 4b0:	8f e1       	ldi	r24, 0x1F	; 31
 4b2:	9e e4       	ldi	r25, 0x4E	; 78
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <LCD_WriteCommand+0x82>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <LCD_WriteCommand+0x88>
 4ba:	00 00       	nop
	DIO_SetPinValue(LCD_8BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
	
	_delay_ms(5);
	
	#endif
}
 4bc:	cf 91       	pop	r28
 4be:	08 95       	ret

000004c0 <LCD_Init>:

void LCD_Init (void)
{
	#if LCD_MODE == 4
	
	DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT, LCD_RS_PIN , DIO_PIN_OUTPUT);
 4c0:	41 e0       	ldi	r20, 0x01	; 1
 4c2:	61 e0       	ldi	r22, 0x01	; 1
 4c4:	84 e1       	ldi	r24, 0x14	; 20
 4c6:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT, LCD_RW_PIN , DIO_PIN_OUTPUT);
 4ca:	41 e0       	ldi	r20, 0x01	; 1
 4cc:	62 e0       	ldi	r22, 0x02	; 2
 4ce:	84 e1       	ldi	r24, 0x14	; 20
 4d0:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN , DIO_PIN_OUTPUT);
 4d4:	41 e0       	ldi	r20, 0x01	; 1
 4d6:	63 e0       	ldi	r22, 0x03	; 3
 4d8:	84 e1       	ldi	r24, 0x14	; 20
 4da:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	
	DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT, LCD_D4_PIN , DIO_PIN_OUTPUT);
 4de:	41 e0       	ldi	r20, 0x01	; 1
 4e0:	64 e0       	ldi	r22, 0x04	; 4
 4e2:	8a e0       	ldi	r24, 0x0A	; 10
 4e4:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT, LCD_D5_PIN , DIO_PIN_OUTPUT);
 4e8:	41 e0       	ldi	r20, 0x01	; 1
 4ea:	65 e0       	ldi	r22, 0x05	; 5
 4ec:	8a e0       	ldi	r24, 0x0A	; 10
 4ee:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT, LCD_D6_PIN , DIO_PIN_OUTPUT);
 4f2:	41 e0       	ldi	r20, 0x01	; 1
 4f4:	66 e0       	ldi	r22, 0x06	; 6
 4f6:	8a e0       	ldi	r24, 0x0A	; 10
 4f8:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_MODE_DATA_PORT, LCD_D7_PIN , DIO_PIN_OUTPUT);
 4fc:	41 e0       	ldi	r20, 0x01	; 1
 4fe:	67 e0       	ldi	r22, 0x07	; 7
 500:	8a e0       	ldi	r24, 0x0A	; 10
 502:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
 506:	2f ef       	ldi	r18, 0xFF	; 255
 508:	81 ee       	ldi	r24, 0xE1	; 225
 50a:	94 e0       	ldi	r25, 0x04	; 4
 50c:	21 50       	subi	r18, 0x01	; 1
 50e:	80 40       	sbci	r24, 0x00	; 0
 510:	90 40       	sbci	r25, 0x00	; 0
 512:	e1 f7       	brne	.-8      	; 0x50c <LCD_Init+0x4c>
 514:	00 c0       	rjmp	.+0      	; 0x516 <LCD_Init+0x56>
 516:	00 00       	nop
	
	_delay_ms(100);
	
	LCD_WriteCommand(0x33);
 518:	83 e3       	ldi	r24, 0x33	; 51
 51a:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	LCD_WriteCommand(0x32);
 51e:	82 e3       	ldi	r24, 0x32	; 50
 520:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	LCD_WriteCommand(0x28);
 524:	88 e2       	ldi	r24, 0x28	; 40
 526:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	
	LCD_WriteCommand(0x0C);
 52a:	8c e0       	ldi	r24, 0x0C	; 12
 52c:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	LCD_WriteCommand(0x06);
 536:	86 e0       	ldi	r24, 0x06	; 6
 538:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	LCD_WriteCommand(0x02);
 53c:	82 e0       	ldi	r24, 0x02	; 2
 53e:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
 542:	08 95       	ret

00000544 <LCD_WriteChar>:
	
	#endif
}

void LCD_WriteChar (uint8 data)
{
 544:	cf 93       	push	r28
 546:	c8 2f       	mov	r28, r24
	#if LCD_MODE == 4
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_RS_PIN, DIO_PIN_HIGH);
 548:	41 e0       	ldi	r20, 0x01	; 1
 54a:	61 e0       	ldi	r22, 0x01	; 1
 54c:	84 e1       	ldi	r24, 0x14	; 20
 54e:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_RW_PIN, DIO_PIN_LOW);
 552:	40 e0       	ldi	r20, 0x00	; 0
 554:	62 e0       	ldi	r22, 0x02	; 2
 556:	84 e1       	ldi	r24, 0x14	; 20
 558:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 55c:	40 e0       	ldi	r20, 0x00	; 0
 55e:	63 e0       	ldi	r22, 0x03	; 3
 560:	84 e1       	ldi	r24, 0x14	; 20
 562:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	
	LCD_4BIT_MODE_DATA_BUS = (data & 0xf0) | (LCD_4BIT_MODE_DATA_BUS & 0x0f);
 566:	8b b3       	in	r24, 0x1b	; 27
 568:	9c 2f       	mov	r25, r28
 56a:	90 7f       	andi	r25, 0xF0	; 240
 56c:	8f 70       	andi	r24, 0x0F	; 15
 56e:	89 2b       	or	r24, r25
 570:	8b bb       	out	0x1b, r24	; 27
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_HIGH);
 572:	41 e0       	ldi	r20, 0x01	; 1
 574:	63 e0       	ldi	r22, 0x03	; 3
 576:	84 e1       	ldi	r24, 0x14	; 20
 578:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 57c:	8f e9       	ldi	r24, 0x9F	; 159
 57e:	9f e0       	ldi	r25, 0x0F	; 15
 580:	01 97       	sbiw	r24, 0x01	; 1
 582:	f1 f7       	brne	.-4      	; 0x580 <LCD_WriteChar+0x3c>
 584:	00 c0       	rjmp	.+0      	; 0x586 <LCD_WriteChar+0x42>
 586:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 588:	40 e0       	ldi	r20, 0x00	; 0
 58a:	63 e0       	ldi	r22, 0x03	; 3
 58c:	84 e1       	ldi	r24, 0x14	; 20
 58e:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
	
	LCD_4BIT_MODE_DATA_BUS = (data << 4) | (LCD_4BIT_MODE_DATA_BUS & 0x0f);
 592:	20 e1       	ldi	r18, 0x10	; 16
 594:	c2 9f       	mul	r28, r18
 596:	c0 01       	movw	r24, r0
 598:	11 24       	eor	r1, r1
 59a:	9b b3       	in	r25, 0x1b	; 27
 59c:	9f 70       	andi	r25, 0x0F	; 15
 59e:	89 2b       	or	r24, r25
 5a0:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_HIGH);
 5a2:	41 e0       	ldi	r20, 0x01	; 1
 5a4:	63 e0       	ldi	r22, 0x03	; 3
 5a6:	84 e1       	ldi	r24, 0x14	; 20
 5a8:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 5ac:	8f e9       	ldi	r24, 0x9F	; 159
 5ae:	9f e0       	ldi	r25, 0x0F	; 15
 5b0:	01 97       	sbiw	r24, 0x01	; 1
 5b2:	f1 f7       	brne	.-4      	; 0x5b0 <LCD_WriteChar+0x6c>
 5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <LCD_WriteChar+0x72>
 5b6:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinValue(LCD_4BIT_MODE_CMD_PORT, LCD_E_PIN, DIO_PIN_LOW);
 5b8:	40 e0       	ldi	r20, 0x00	; 0
 5ba:	63 e0       	ldi	r22, 0x03	; 3
 5bc:	84 e1       	ldi	r24, 0x14	; 20
 5be:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_SetPinValue>
 5c2:	8f e1       	ldi	r24, 0x1F	; 31
 5c4:	9e e4       	ldi	r25, 0x4E	; 78
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	f1 f7       	brne	.-4      	; 0x5c6 <LCD_WriteChar+0x82>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <LCD_WriteChar+0x88>
 5cc:	00 00       	nop
	
	_delay_ms(5);
	
	#endif
	
}
 5ce:	cf 91       	pop	r28
 5d0:	08 95       	ret

000005d2 <LCD_WriteInteger>:


/*  Assignment  */
void LCD_WriteInteger (sint32 num)
{
 5d2:	cf 92       	push	r12
 5d4:	df 92       	push	r13
 5d6:	ef 92       	push	r14
 5d8:	ff 92       	push	r15
 5da:	1f 93       	push	r17
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	6b 01       	movw	r12, r22
 5e2:	7c 01       	movw	r14, r24
	sint32 temp_num;
	uint16 increment_temp_num = 0;
	sint8 counter = 0; // adjusting variable to be signed solve the last loop going infinite
	
	if (num < 0)
 5e4:	99 23       	and	r25, r25
 5e6:	5c f4       	brge	.+22     	; 0x5fe <LCD_WriteInteger+0x2c>
	{
		LCD_WriteChar('-');
 5e8:	8d e2       	ldi	r24, 0x2D	; 45
 5ea:	0e 94 a2 02 	call	0x544	; 0x544 <LCD_WriteChar>
		temp_num = num * -1;
 5ee:	f0 94       	com	r15
 5f0:	e0 94       	com	r14
 5f2:	d0 94       	com	r13
 5f4:	c0 94       	com	r12
 5f6:	c1 1c       	adc	r12, r1
 5f8:	d1 1c       	adc	r13, r1
 5fa:	e1 1c       	adc	r14, r1
 5fc:	f1 1c       	adc	r15, r1
	}
	else
		temp_num = num;
	
	if(temp_num == 0)
 5fe:	c1 14       	cp	r12, r1
 600:	d1 04       	cpc	r13, r1
 602:	e1 04       	cpc	r14, r1
 604:	f1 04       	cpc	r15, r1
 606:	f9 f4       	brne	.+62     	; 0x646 <LCD_WriteInteger+0x74>
	{
		LCD_WriteChar('0');
 608:	80 e3       	ldi	r24, 0x30	; 48
 60a:	0e 94 a2 02 	call	0x544	; 0x544 <LCD_WriteChar>
 60e:	53 c0       	rjmp	.+166    	; 0x6b6 <LCD_WriteInteger+0xe4>
	}
	else
	{
		while (temp_num > 0 && counter < 10)
		{
			increment_temp_num = ((increment_temp_num * 10) + (temp_num % 10));
 610:	be 01       	movw	r22, r28
 612:	66 0f       	add	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	cc 0f       	add	r28, r28
 618:	dd 1f       	adc	r29, r29
 61a:	cc 0f       	add	r28, r28
 61c:	dd 1f       	adc	r29, r29
 61e:	cc 0f       	add	r28, r28
 620:	dd 1f       	adc	r29, r29
 622:	c6 0f       	add	r28, r22
 624:	d7 1f       	adc	r29, r23
 626:	c7 01       	movw	r24, r14
 628:	b6 01       	movw	r22, r12
 62a:	2a e0       	ldi	r18, 0x0A	; 10
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	40 e0       	ldi	r20, 0x00	; 0
 630:	50 e0       	ldi	r21, 0x00	; 0
 632:	0e 94 18 05 	call	0xa30	; 0xa30 <__divmodsi4>
 636:	c6 0f       	add	r28, r22
 638:	d7 1f       	adc	r29, r23
			temp_num /= 10;
 63a:	c2 2e       	mov	r12, r18
 63c:	d3 2e       	mov	r13, r19
 63e:	e4 2e       	mov	r14, r20
 640:	f5 2e       	mov	r15, r21
			counter++;
 642:	1f 5f       	subi	r17, 0xFF	; 255
 644:	03 c0       	rjmp	.+6      	; 0x64c <LCD_WriteInteger+0x7a>
 646:	10 e0       	ldi	r17, 0x00	; 0
 648:	c0 e0       	ldi	r28, 0x00	; 0
 64a:	d0 e0       	ldi	r29, 0x00	; 0
	{
		LCD_WriteChar('0');
	}
	else
	{
		while (temp_num > 0 && counter < 10)
 64c:	1c 14       	cp	r1, r12
 64e:	1d 04       	cpc	r1, r13
 650:	1e 04       	cpc	r1, r14
 652:	1f 04       	cpc	r1, r15
 654:	14 f4       	brge	.+4      	; 0x65a <LCD_WriteInteger+0x88>
 656:	1a 30       	cpi	r17, 0x0A	; 10
 658:	dc f2       	brlt	.-74     	; 0x610 <LCD_WriteInteger+0x3e>
		{
			increment_temp_num = ((increment_temp_num * 10) + (temp_num % 10));
			temp_num /= 10;
			counter++;
		}
		counter--;
 65a:	11 50       	subi	r17, 0x01	; 1
		while(counter>=0)
 65c:	2a c0       	rjmp	.+84     	; 0x6b2 <LCD_WriteInteger+0xe0>
		{
			LCD_WriteChar('0' + (increment_temp_num % 10));
 65e:	9e 01       	movw	r18, r28
 660:	ad ec       	ldi	r26, 0xCD	; 205
 662:	bc ec       	ldi	r27, 0xCC	; 204
 664:	0e 94 37 05 	call	0xa6e	; 0xa6e <__umulhisi3>
 668:	96 95       	lsr	r25
 66a:	87 95       	ror	r24
 66c:	96 95       	lsr	r25
 66e:	87 95       	ror	r24
 670:	96 95       	lsr	r25
 672:	87 95       	ror	r24
 674:	9c 01       	movw	r18, r24
 676:	22 0f       	add	r18, r18
 678:	33 1f       	adc	r19, r19
 67a:	88 0f       	add	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	88 0f       	add	r24, r24
 680:	99 1f       	adc	r25, r25
 682:	88 0f       	add	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	82 0f       	add	r24, r18
 688:	93 1f       	adc	r25, r19
 68a:	9e 01       	movw	r18, r28
 68c:	28 1b       	sub	r18, r24
 68e:	39 0b       	sbc	r19, r25
 690:	c9 01       	movw	r24, r18
 692:	80 5d       	subi	r24, 0xD0	; 208
 694:	0e 94 a2 02 	call	0x544	; 0x544 <LCD_WriteChar>
			increment_temp_num /= 10;
 698:	9e 01       	movw	r18, r28
 69a:	ad ec       	ldi	r26, 0xCD	; 205
 69c:	bc ec       	ldi	r27, 0xCC	; 204
 69e:	0e 94 37 05 	call	0xa6e	; 0xa6e <__umulhisi3>
 6a2:	ec 01       	movw	r28, r24
 6a4:	d6 95       	lsr	r29
 6a6:	c7 95       	ror	r28
 6a8:	d6 95       	lsr	r29
 6aa:	c7 95       	ror	r28
 6ac:	d6 95       	lsr	r29
 6ae:	c7 95       	ror	r28
			counter--;
 6b0:	11 50       	subi	r17, 0x01	; 1
			increment_temp_num = ((increment_temp_num * 10) + (temp_num % 10));
			temp_num /= 10;
			counter++;
		}
		counter--;
		while(counter>=0)
 6b2:	11 23       	and	r17, r17
 6b4:	a4 f6       	brge	.-88     	; 0x65e <LCD_WriteInteger+0x8c>
			LCD_WriteChar('0' + (increment_temp_num % 10));
			increment_temp_num /= 10;
			counter--;
		}
	}
}
 6b6:	df 91       	pop	r29
 6b8:	cf 91       	pop	r28
 6ba:	1f 91       	pop	r17
 6bc:	ff 90       	pop	r15
 6be:	ef 90       	pop	r14
 6c0:	df 90       	pop	r13
 6c2:	cf 90       	pop	r12
 6c4:	08 95       	ret

000006c6 <LCD_WriteString>:
/******************/

void LCD_WriteString(uint8* str)
{
 6c6:	0f 93       	push	r16
 6c8:	1f 93       	push	r17
 6ca:	cf 93       	push	r28
 6cc:	8c 01       	movw	r16, r24
	uint8 Str_count = 0;
 6ce:	c0 e0       	ldi	r28, 0x00	; 0
	while (str[Str_count] != '\0')
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <LCD_WriteString+0x12>
	{
		LCD_WriteChar (str[Str_count]);
 6d2:	0e 94 a2 02 	call	0x544	; 0x544 <LCD_WriteChar>
		Str_count++;
 6d6:	cf 5f       	subi	r28, 0xFF	; 255
/******************/

void LCD_WriteString(uint8* str)
{
	uint8 Str_count = 0;
	while (str[Str_count] != '\0')
 6d8:	f8 01       	movw	r30, r16
 6da:	ec 0f       	add	r30, r28
 6dc:	f1 1d       	adc	r31, r1
 6de:	80 81       	ld	r24, Z
 6e0:	81 11       	cpse	r24, r1
 6e2:	f7 cf       	rjmp	.-18     	; 0x6d2 <LCD_WriteString+0xc>
	{
		LCD_WriteChar (str[Str_count]);
		Str_count++;
	}
}
 6e4:	cf 91       	pop	r28
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	08 95       	ret

000006ec <LCD_GoToLocation>:

void LCD_GoToLocation(uint8 row, uint8 col)
{
 6ec:	cf 93       	push	r28
 6ee:	df 93       	push	r29
 6f0:	00 d0       	rcall	.+0      	; 0x6f2 <LCD_GoToLocation+0x6>
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
	uint8 rows[2] = {0x80,0xc0};
 6f6:	90 e8       	ldi	r25, 0x80	; 128
 6f8:	99 83       	std	Y+1, r25	; 0x01
 6fa:	90 ec       	ldi	r25, 0xC0	; 192
 6fc:	9a 83       	std	Y+2, r25	; 0x02
	
	LCD_WriteCommand(rows[row]+col);
 6fe:	e1 e0       	ldi	r30, 0x01	; 1
 700:	f0 e0       	ldi	r31, 0x00	; 0
 702:	ec 0f       	add	r30, r28
 704:	fd 1f       	adc	r31, r29
 706:	e8 0f       	add	r30, r24
 708:	f1 1d       	adc	r31, r1
 70a:	80 81       	ld	r24, Z
 70c:	86 0f       	add	r24, r22
 70e:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
	
}
 712:	0f 90       	pop	r0
 714:	0f 90       	pop	r0
 716:	df 91       	pop	r29
 718:	cf 91       	pop	r28
 71a:	08 95       	ret

0000071c <LCD_Clear>:

void LCD_Clear (void)
{
	LCD_WriteCommand(0x01);
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WriteCommand>
 722:	08 95       	ret

00000724 <LED_Init>:
 724:	81 30       	cpi	r24, 0x01	; 1
 726:	51 f0       	breq	.+20     	; 0x73c <LED_Init+0x18>
 728:	18 f0       	brcs	.+6      	; 0x730 <LED_Init+0xc>
 72a:	82 30       	cpi	r24, 0x02	; 2
 72c:	69 f0       	breq	.+26     	; 0x748 <LED_Init+0x24>
 72e:	08 95       	ret
 730:	40 e0       	ldi	r20, 0x00	; 0
 732:	62 e0       	ldi	r22, 0x02	; 2
 734:	8e e1       	ldi	r24, 0x1E	; 30
 736:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
 73a:	08 95       	ret
 73c:	40 e0       	ldi	r20, 0x00	; 0
 73e:	67 e0       	ldi	r22, 0x07	; 7
 740:	8e e1       	ldi	r24, 0x1E	; 30
 742:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
 746:	08 95       	ret
 748:	40 e0       	ldi	r20, 0x00	; 0
 74a:	63 e0       	ldi	r22, 0x03	; 3
 74c:	88 e2       	ldi	r24, 0x28	; 40
 74e:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_SetPinDir>
 752:	08 95       	ret

00000754 <LED_Toggle>:
 754:	81 30       	cpi	r24, 0x01	; 1
 756:	49 f0       	breq	.+18     	; 0x76a <LED_Toggle+0x16>
 758:	18 f0       	brcs	.+6      	; 0x760 <LED_Toggle+0xc>
 75a:	82 30       	cpi	r24, 0x02	; 2
 75c:	59 f0       	breq	.+22     	; 0x774 <LED_Toggle+0x20>
 75e:	08 95       	ret
 760:	62 e0       	ldi	r22, 0x02	; 2
 762:	8e e1       	ldi	r24, 0x1E	; 30
 764:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <DIO_TogglePin>
 768:	08 95       	ret
 76a:	67 e0       	ldi	r22, 0x07	; 7
 76c:	8e e1       	ldi	r24, 0x1E	; 30
 76e:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <DIO_TogglePin>
 772:	08 95       	ret
 774:	63 e0       	ldi	r22, 0x03	; 3
 776:	88 e2       	ldi	r24, 0x28	; 40
 778:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <DIO_TogglePin>
 77c:	08 95       	ret

0000077e <main>:
 77e:	80 e0       	ldi	r24, 0x00	; 0
 780:	0e 94 92 03 	call	0x724	; 0x724 <LED_Init>
 784:	81 e0       	ldi	r24, 0x01	; 1
 786:	0e 94 92 03 	call	0x724	; 0x724 <LED_Init>
 78a:	82 e0       	ldi	r24, 0x02	; 2
 78c:	0e 94 92 03 	call	0x724	; 0x724 <LED_Init>
 790:	80 e0       	ldi	r24, 0x00	; 0
 792:	0e 94 41 00 	call	0x82	; 0x82 <Button_Init>
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	0e 94 41 00 	call	0x82	; 0x82 <Button_Init>
 79c:	82 e0       	ldi	r24, 0x02	; 2
 79e:	0e 94 41 00 	call	0x82	; 0x82 <Button_Init>
 7a2:	0e 94 60 02 	call	0x4c0	; 0x4c0 <LCD_Init>
 7a6:	63 e0       	ldi	r22, 0x03	; 3
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	0e 94 76 03 	call	0x6ec	; 0x6ec <LCD_GoToLocation>
 7ae:	80 e6       	ldi	r24, 0x60	; 96
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 7b6:	80 e0       	ldi	r24, 0x00	; 0
 7b8:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7c2:	82 e0       	ldi	r24, 0x02	; 2
 7c4:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7c8:	2f ef       	ldi	r18, 0xFF	; 255
 7ca:	84 e3       	ldi	r24, 0x34	; 52
 7cc:	9c e0       	ldi	r25, 0x0C	; 12
 7ce:	21 50       	subi	r18, 0x01	; 1
 7d0:	80 40       	sbci	r24, 0x00	; 0
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	e1 f7       	brne	.-8      	; 0x7ce <main+0x50>
 7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <main+0x5a>
 7d8:	00 00       	nop
 7da:	80 e0       	ldi	r24, 0x00	; 0
 7dc:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7e0:	81 e0       	ldi	r24, 0x01	; 1
 7e2:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7e6:	82 e0       	ldi	r24, 0x02	; 2
 7e8:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 7ec:	2f ef       	ldi	r18, 0xFF	; 255
 7ee:	85 ea       	ldi	r24, 0xA5	; 165
 7f0:	9e e0       	ldi	r25, 0x0E	; 14
 7f2:	21 50       	subi	r18, 0x01	; 1
 7f4:	80 40       	sbci	r24, 0x00	; 0
 7f6:	90 40       	sbci	r25, 0x00	; 0
 7f8:	e1 f7       	brne	.-8      	; 0x7f2 <main+0x74>
 7fa:	00 c0       	rjmp	.+0      	; 0x7fc <main+0x7e>
 7fc:	00 00       	nop
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 80a:	82 e0       	ldi	r24, 0x02	; 2
 80c:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 810:	2f ef       	ldi	r18, 0xFF	; 255
 812:	84 e3       	ldi	r24, 0x34	; 52
 814:	9c e0       	ldi	r25, 0x0C	; 12
 816:	21 50       	subi	r18, 0x01	; 1
 818:	80 40       	sbci	r24, 0x00	; 0
 81a:	90 40       	sbci	r25, 0x00	; 0
 81c:	e1 f7       	brne	.-8      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 81e:	00 c0       	rjmp	.+0      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 820:	00 00       	nop
 822:	80 e0       	ldi	r24, 0x00	; 0
 824:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 828:	81 e0       	ldi	r24, 0x01	; 1
 82a:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 82e:	82 e0       	ldi	r24, 0x02	; 2
 830:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 834:	2f ef       	ldi	r18, 0xFF	; 255
 836:	85 ea       	ldi	r24, 0xA5	; 165
 838:	9e e0       	ldi	r25, 0x0E	; 14
 83a:	21 50       	subi	r18, 0x01	; 1
 83c:	80 40       	sbci	r24, 0x00	; 0
 83e:	90 40       	sbci	r25, 0x00	; 0
 840:	e1 f7       	brne	.-8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 842:	00 c0       	rjmp	.+0      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 844:	00 00       	nop
 846:	80 e0       	ldi	r24, 0x00	; 0
 848:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 852:	82 e0       	ldi	r24, 0x02	; 2
 854:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 858:	2f ef       	ldi	r18, 0xFF	; 255
 85a:	84 e3       	ldi	r24, 0x34	; 52
 85c:	9c e0       	ldi	r25, 0x0C	; 12
 85e:	21 50       	subi	r18, 0x01	; 1
 860:	80 40       	sbci	r24, 0x00	; 0
 862:	90 40       	sbci	r25, 0x00	; 0
 864:	e1 f7       	brne	.-8      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 866:	00 c0       	rjmp	.+0      	; 0x868 <__stack+0x9>
 868:	00 00       	nop
 86a:	80 e0       	ldi	r24, 0x00	; 0
 86c:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 870:	81 e0       	ldi	r24, 0x01	; 1
 872:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 876:	82 e0       	ldi	r24, 0x02	; 2
 878:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 87c:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 880:	89 e6       	ldi	r24, 0x69	; 105
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 888:	80 e0       	ldi	r24, 0x00	; 0
 88a:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 88e:	2f ef       	ldi	r18, 0xFF	; 255
 890:	84 e3       	ldi	r24, 0x34	; 52
 892:	9c e0       	ldi	r25, 0x0C	; 12
 894:	21 50       	subi	r18, 0x01	; 1
 896:	80 40       	sbci	r24, 0x00	; 0
 898:	90 40       	sbci	r25, 0x00	; 0
 89a:	e1 f7       	brne	.-8      	; 0x894 <__stack+0x35>
 89c:	00 c0       	rjmp	.+0      	; 0x89e <__stack+0x3f>
 89e:	00 00       	nop
 8a0:	81 e0       	ldi	r24, 0x01	; 1
 8a2:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 8a6:	2f ef       	ldi	r18, 0xFF	; 255
 8a8:	84 e3       	ldi	r24, 0x34	; 52
 8aa:	9c e0       	ldi	r25, 0x0C	; 12
 8ac:	21 50       	subi	r18, 0x01	; 1
 8ae:	80 40       	sbci	r24, 0x00	; 0
 8b0:	90 40       	sbci	r25, 0x00	; 0
 8b2:	e1 f7       	brne	.-8      	; 0x8ac <__stack+0x4d>
 8b4:	00 c0       	rjmp	.+0      	; 0x8b6 <__stack+0x57>
 8b6:	00 00       	nop
 8b8:	82 e0       	ldi	r24, 0x02	; 2
 8ba:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 8be:	2f ef       	ldi	r18, 0xFF	; 255
 8c0:	85 ea       	ldi	r24, 0xA5	; 165
 8c2:	9e e0       	ldi	r25, 0x0E	; 14
 8c4:	21 50       	subi	r18, 0x01	; 1
 8c6:	80 40       	sbci	r24, 0x00	; 0
 8c8:	90 40       	sbci	r25, 0x00	; 0
 8ca:	e1 f7       	brne	.-8      	; 0x8c4 <__stack+0x65>
 8cc:	00 c0       	rjmp	.+0      	; 0x8ce <__stack+0x6f>
 8ce:	00 00       	nop
 8d0:	80 e0       	ldi	r24, 0x00	; 0
 8d2:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 8d6:	2f ef       	ldi	r18, 0xFF	; 255
 8d8:	84 e3       	ldi	r24, 0x34	; 52
 8da:	9c e0       	ldi	r25, 0x0C	; 12
 8dc:	21 50       	subi	r18, 0x01	; 1
 8de:	80 40       	sbci	r24, 0x00	; 0
 8e0:	90 40       	sbci	r25, 0x00	; 0
 8e2:	e1 f7       	brne	.-8      	; 0x8dc <__stack+0x7d>
 8e4:	00 c0       	rjmp	.+0      	; 0x8e6 <__stack+0x87>
 8e6:	00 00       	nop
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 8ee:	2f ef       	ldi	r18, 0xFF	; 255
 8f0:	84 e3       	ldi	r24, 0x34	; 52
 8f2:	9c e0       	ldi	r25, 0x0C	; 12
 8f4:	21 50       	subi	r18, 0x01	; 1
 8f6:	80 40       	sbci	r24, 0x00	; 0
 8f8:	90 40       	sbci	r25, 0x00	; 0
 8fa:	e1 f7       	brne	.-8      	; 0x8f4 <__stack+0x95>
 8fc:	00 c0       	rjmp	.+0      	; 0x8fe <__stack+0x9f>
 8fe:	00 00       	nop
 900:	82 e0       	ldi	r24, 0x02	; 2
 902:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 906:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 90a:	c0 e0       	ldi	r28, 0x00	; 0
 90c:	c1 2c       	mov	r12, r1
 90e:	d1 2c       	mov	r13, r1
 910:	76 01       	movw	r14, r12
 912:	80 e0       	ldi	r24, 0x00	; 0
 914:	0e 94 59 00 	call	0xb2	; 0xb2 <Button_GetValue>
 918:	81 30       	cpi	r24, 0x01	; 1
 91a:	31 f5       	brne	.+76     	; 0x968 <__stack+0x109>
 91c:	80 e0       	ldi	r24, 0x00	; 0
 91e:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 922:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 926:	8b e7       	ldi	r24, 0x7B	; 123
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 92e:	60 e0       	ldi	r22, 0x00	; 0
 930:	81 e0       	ldi	r24, 0x01	; 1
 932:	0e 94 76 03 	call	0x6ec	; 0x6ec <LCD_GoToLocation>
 936:	8c e8       	ldi	r24, 0x8C	; 140
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 93e:	2f ef       	ldi	r18, 0xFF	; 255
 940:	83 ed       	ldi	r24, 0xD3	; 211
 942:	90 e3       	ldi	r25, 0x30	; 48
 944:	21 50       	subi	r18, 0x01	; 1
 946:	80 40       	sbci	r24, 0x00	; 0
 948:	90 40       	sbci	r25, 0x00	; 0
 94a:	e1 f7       	brne	.-8      	; 0x944 <__stack+0xe5>
 94c:	00 c0       	rjmp	.+0      	; 0x94e <__stack+0xef>
 94e:	00 00       	nop
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 956:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 95a:	2f ef       	ldi	r18, 0xFF	; 255
 95c:	c2 1a       	sub	r12, r18
 95e:	d2 0a       	sbc	r13, r18
 960:	e2 0a       	sbc	r14, r18
 962:	f2 0a       	sbc	r15, r18
 964:	c1 e0       	ldi	r28, 0x01	; 1
 966:	d5 cf       	rjmp	.-86     	; 0x912 <__stack+0xb3>
 968:	81 e0       	ldi	r24, 0x01	; 1
 96a:	0e 94 59 00 	call	0xb2	; 0xb2 <Button_GetValue>
 96e:	81 30       	cpi	r24, 0x01	; 1
 970:	29 f5       	brne	.+74     	; 0x9bc <__stack+0x15d>
 972:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 976:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 97a:	86 e9       	ldi	r24, 0x96	; 150
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 982:	60 e0       	ldi	r22, 0x00	; 0
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	0e 94 76 03 	call	0x6ec	; 0x6ec <LCD_GoToLocation>
 98a:	87 ea       	ldi	r24, 0xA7	; 167
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 992:	8f ef       	ldi	r24, 0xFF	; 255
 994:	93 ed       	ldi	r25, 0xD3	; 211
 996:	20 e3       	ldi	r18, 0x30	; 48
 998:	81 50       	subi	r24, 0x01	; 1
 99a:	90 40       	sbci	r25, 0x00	; 0
 99c:	20 40       	sbci	r18, 0x00	; 0
 99e:	e1 f7       	brne	.-8      	; 0x998 <__stack+0x139>
 9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <__stack+0x143>
 9a2:	00 00       	nop
 9a4:	81 e0       	ldi	r24, 0x01	; 1
 9a6:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 9aa:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 9ae:	82 e0       	ldi	r24, 0x02	; 2
 9b0:	c8 0e       	add	r12, r24
 9b2:	d1 1c       	adc	r13, r1
 9b4:	e1 1c       	adc	r14, r1
 9b6:	f1 1c       	adc	r15, r1
 9b8:	c1 e0       	ldi	r28, 0x01	; 1
 9ba:	ab cf       	rjmp	.-170    	; 0x912 <__stack+0xb3>
 9bc:	82 e0       	ldi	r24, 0x02	; 2
 9be:	0e 94 59 00 	call	0xb2	; 0xb2 <Button_GetValue>
 9c2:	81 30       	cpi	r24, 0x01	; 1
 9c4:	31 f5       	brne	.+76     	; 0xa12 <__stack+0x1b3>
 9c6:	82 e0       	ldi	r24, 0x02	; 2
 9c8:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 9cc:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 9d0:	81 eb       	ldi	r24, 0xB1	; 177
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 9d8:	60 e0       	ldi	r22, 0x00	; 0
 9da:	81 e0       	ldi	r24, 0x01	; 1
 9dc:	0e 94 76 03 	call	0x6ec	; 0x6ec <LCD_GoToLocation>
 9e0:	82 ec       	ldi	r24, 0xC2	; 194
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 9e8:	9f ef       	ldi	r25, 0xFF	; 255
 9ea:	23 ed       	ldi	r18, 0xD3	; 211
 9ec:	80 e3       	ldi	r24, 0x30	; 48
 9ee:	91 50       	subi	r25, 0x01	; 1
 9f0:	20 40       	sbci	r18, 0x00	; 0
 9f2:	80 40       	sbci	r24, 0x00	; 0
 9f4:	e1 f7       	brne	.-8      	; 0x9ee <__stack+0x18f>
 9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <__stack+0x199>
 9f8:	00 00       	nop
 9fa:	82 e0       	ldi	r24, 0x02	; 2
 9fc:	0e 94 aa 03 	call	0x754	; 0x754 <LED_Toggle>
 a00:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 a04:	93 e0       	ldi	r25, 0x03	; 3
 a06:	c9 0e       	add	r12, r25
 a08:	d1 1c       	adc	r13, r1
 a0a:	e1 1c       	adc	r14, r1
 a0c:	f1 1c       	adc	r15, r1
 a0e:	c1 e0       	ldi	r28, 0x01	; 1
 a10:	80 cf       	rjmp	.-256    	; 0x912 <__stack+0xb3>
 a12:	cc 23       	and	r28, r28
 a14:	09 f4       	brne	.+2      	; 0xa18 <__stack+0x1b9>
 a16:	7d cf       	rjmp	.-262    	; 0x912 <__stack+0xb3>
 a18:	0e 94 8e 03 	call	0x71c	; 0x71c <LCD_Clear>
 a1c:	8c ec       	ldi	r24, 0xCC	; 204
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_WriteString>
 a24:	c7 01       	movw	r24, r14
 a26:	b6 01       	movw	r22, r12
 a28:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <LCD_WriteInteger>
 a2c:	c0 e0       	ldi	r28, 0x00	; 0
 a2e:	71 cf       	rjmp	.-286    	; 0x912 <__stack+0xb3>

00000a30 <__divmodsi4>:
 a30:	05 2e       	mov	r0, r21
 a32:	97 fb       	bst	r25, 7
 a34:	1e f4       	brtc	.+6      	; 0xa3c <__divmodsi4+0xc>
 a36:	00 94       	com	r0
 a38:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__negsi2>
 a3c:	57 fd       	sbrc	r21, 7
 a3e:	07 d0       	rcall	.+14     	; 0xa4e <__divmodsi4_neg2>
 a40:	0e 94 46 05 	call	0xa8c	; 0xa8c <__udivmodsi4>
 a44:	07 fc       	sbrc	r0, 7
 a46:	03 d0       	rcall	.+6      	; 0xa4e <__divmodsi4_neg2>
 a48:	4e f4       	brtc	.+18     	; 0xa5c <__divmodsi4_exit>
 a4a:	0c 94 2f 05 	jmp	0xa5e	; 0xa5e <__negsi2>

00000a4e <__divmodsi4_neg2>:
 a4e:	50 95       	com	r21
 a50:	40 95       	com	r20
 a52:	30 95       	com	r19
 a54:	21 95       	neg	r18
 a56:	3f 4f       	sbci	r19, 0xFF	; 255
 a58:	4f 4f       	sbci	r20, 0xFF	; 255
 a5a:	5f 4f       	sbci	r21, 0xFF	; 255

00000a5c <__divmodsi4_exit>:
 a5c:	08 95       	ret

00000a5e <__negsi2>:
 a5e:	90 95       	com	r25
 a60:	80 95       	com	r24
 a62:	70 95       	com	r23
 a64:	61 95       	neg	r22
 a66:	7f 4f       	sbci	r23, 0xFF	; 255
 a68:	8f 4f       	sbci	r24, 0xFF	; 255
 a6a:	9f 4f       	sbci	r25, 0xFF	; 255
 a6c:	08 95       	ret

00000a6e <__umulhisi3>:
 a6e:	a2 9f       	mul	r26, r18
 a70:	b0 01       	movw	r22, r0
 a72:	b3 9f       	mul	r27, r19
 a74:	c0 01       	movw	r24, r0
 a76:	a3 9f       	mul	r26, r19
 a78:	70 0d       	add	r23, r0
 a7a:	81 1d       	adc	r24, r1
 a7c:	11 24       	eor	r1, r1
 a7e:	91 1d       	adc	r25, r1
 a80:	b2 9f       	mul	r27, r18
 a82:	70 0d       	add	r23, r0
 a84:	81 1d       	adc	r24, r1
 a86:	11 24       	eor	r1, r1
 a88:	91 1d       	adc	r25, r1
 a8a:	08 95       	ret

00000a8c <__udivmodsi4>:
 a8c:	a1 e2       	ldi	r26, 0x21	; 33
 a8e:	1a 2e       	mov	r1, r26
 a90:	aa 1b       	sub	r26, r26
 a92:	bb 1b       	sub	r27, r27
 a94:	fd 01       	movw	r30, r26
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <__udivmodsi4_ep>

00000a98 <__udivmodsi4_loop>:
 a98:	aa 1f       	adc	r26, r26
 a9a:	bb 1f       	adc	r27, r27
 a9c:	ee 1f       	adc	r30, r30
 a9e:	ff 1f       	adc	r31, r31
 aa0:	a2 17       	cp	r26, r18
 aa2:	b3 07       	cpc	r27, r19
 aa4:	e4 07       	cpc	r30, r20
 aa6:	f5 07       	cpc	r31, r21
 aa8:	20 f0       	brcs	.+8      	; 0xab2 <__udivmodsi4_ep>
 aaa:	a2 1b       	sub	r26, r18
 aac:	b3 0b       	sbc	r27, r19
 aae:	e4 0b       	sbc	r30, r20
 ab0:	f5 0b       	sbc	r31, r21

00000ab2 <__udivmodsi4_ep>:
 ab2:	66 1f       	adc	r22, r22
 ab4:	77 1f       	adc	r23, r23
 ab6:	88 1f       	adc	r24, r24
 ab8:	99 1f       	adc	r25, r25
 aba:	1a 94       	dec	r1
 abc:	69 f7       	brne	.-38     	; 0xa98 <__udivmodsi4_loop>
 abe:	60 95       	com	r22
 ac0:	70 95       	com	r23
 ac2:	80 95       	com	r24
 ac4:	90 95       	com	r25
 ac6:	9b 01       	movw	r18, r22
 ac8:	ac 01       	movw	r20, r24
 aca:	bd 01       	movw	r22, r26
 acc:	cf 01       	movw	r24, r30
 ace:	08 95       	ret

00000ad0 <_exit>:
 ad0:	f8 94       	cli

00000ad2 <__stop_program>:
 ad2:	ff cf       	rjmp	.-2      	; 0xad2 <__stop_program>
